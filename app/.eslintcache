[{"C:\\Users\\i322449\\digitalTMC\\app\\src\\index.js":"1","C:\\Users\\i322449\\digitalTMC\\app\\src\\reportWebVitals.js":"2"},{"size":3143,"mtime":1606824473401,"results":"3","hashOfConfig":"4"},{"size":362,"mtime":1606371432449,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"f1dagq",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\i322449\\digitalTMC\\app\\src\\index.js",["11"],"import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\nimport { render } from '@testing-library/react';\n\n\nclass TBanner extends Component{\n  render(){\n    return(\n    <div className = \"App\">\n      <h1>Labs China Toastmasters Attendance Self-Service</h1>\n    </div>\n    );\n  }\n}\nclass Attendance extends Component{\n  state = {\n    meetingRoles:[],\n    memberName:'',\n    roleDescription:'TMD',\n    meetingRoleId: '1'\n  };\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n  } \n  componentDidMount(){\n    fetch(\"http://localhost:8080/meetingroles\")\n      .then((response) => {\n        return response.json();\n      })\n      .then(data =>{\n        this.setState({\n          meetingRoles:[].concat(data)\n        });\n      }).catch(error=>{\n        console.log(error);\n      });\n  }\n  handleChange(event){\n    this.setState({memberName: event.target.value});\n  }\n  handleSelectChange(event){\n    this.setState({roleDescription: event.target.value, meetingRoleId:event.target.key});\n  }\n  handleSubmit(event){\n    event.preventDefault();\n    let requestOptions = {\n      method: 'PUT',\n      headers: {'Content-Type':'application/json'},\n      body: JSON.stringify({name: this.state.memberName, meetingRole: {meetingRoleId: this.state.meetingRoleId,\n        roleDescription: this.state.roleDescription}})\n    };\n    fetch('http://localhost:8080/member', requestOptions)\n    .then((response)=>{console.log(\"This is \"+response);})\n  }\n  render(){\n    return(\n      <form className = \"d-flex justify-content-center flex-column\" onSubmit={this.handleSubmit}>\n        <div className =\"form-group\">\n          <label for=\"memberName\">TMC Member Name:</label>\n          <input type =\"text\" className = \"form-control\" id=\"memberName\" placeholder=\"TMC Member Name\" onChange = {this.handleChange} />\n         </div>\n         <div className =\"form-group\">\n          <label for=\"meetingRole\">Meeting Role:</label>\n          <select id=\"meetingRole\" className = \"form-control\" onChange = {this.handleSelectChange}>\n            {this.state.meetingRoles.map((meetingRole)=> <option key ={meetingRole.meetingRoleId} value= {meetingRole.roleDescription}>{meetingRole.roleDescription}</option>)}\n          </select>\n         </div>\n         <div className =\"form-group\">\n            <button type=\"submit\">Attend!!</button>\n         </div>\n      </form>\n    );\n  };\n}\n\nclass App extends Component{\n  render(){\n    return(\n      <div>\n        <TBanner/>\n        <Attendance/>\n      </div>\n    );\n  };\n}\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","C:\\Users\\i322449\\digitalTMC\\app\\src\\reportWebVitals.js",[],{"ruleId":"12","severity":1,"message":"13","line":7,"column":10,"nodeType":"14","messageId":"15","endLine":7,"endColumn":16},"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar"]